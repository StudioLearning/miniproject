@using miniproject.Models.Report
@using miniproject.Models.Contentful

@model Report4Teacher

@{
    string TheMonth = ViewBag.month;
    int TheYear = ViewBag.year;
    Report4Teacher reports = Model;
    ViewData["Title"] = "Report " + TheMonth + ", " + TheYear.ToString();
}

<h1>@ViewData["Title"]</h1>
<h4>ของอาจารย์ @(reports?.teacher.teacherName)</h4>

<div class="row justify-content-center text-center">
    @Html.Partial("_TeacherPartial", reports.teacher)
</div>

<div class="row justify-content-center mt-5 mb-5">
    <div class="col-12 col-md-6">
        <div class="card text-end">
            <div class="card-body">
                <h5 class="card-title text-start">รายได้ของเดือน @(TheMonth), @(TheYear.ToString())</h5>
                <p class="card-text">@Html.DisplayNameFor(p => p.revenueBeforeTax) @Html.DisplayFor(p =>
                    p.revenueBeforeTax) บาท</p>
                <p class="card-text">@Html.DisplayNameFor(p => p.tax) @Html.DisplayFor(p => p.tax) บาท</p>
                <p class="card-text">@Html.DisplayNameFor(p => p.revenue) @Html.DisplayFor(p => p.revenue) บาท</p>
                <span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-trigger="hover focus"
                    data-bs-content="**รายได้คือ 70% ของรายรับหลังหักภาษี">
                    <p class="card-text fw-bold">@Html.DisplayNameFor(p => p.incomeTotal) @Html.DisplayFor(p =>
                        p.incomeTotal) บาท</p>
                </span>
            </div>
        </div>

    </div>
</div>

<div class="row mt-5 mb-5">
    <div id="chart_div"></div>
</div>

<table class="table text-center mt-5 mb-5">
    <thead>
        <tr>
            <th scope="col">@Html.DisplayNameFor(p => p.report.First().sku)</th>
            <th scope="col">@Html.DisplayNameFor(p => p.report.First().name)</th>
            <th scope="col">@Html.DisplayNameFor(p => p.report.First().quantity)</th>
            <th scope="col">@Html.DisplayNameFor(p => p.report.First().income)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var report in reports.report)
        {
            <tr>
                <td>
                    <div class="d-flex align-items-center">
                        <div class="color4chart me-2" style="background-color: @(report.color)"></div>
                            <span class="text-uppercase">@Html.DisplayFor(modelItem => report.sku)</span>
                    </div>
                </td>
                <td>@Html.DisplayFor(modelItem => report.name)</td>
                <td>@Html.DisplayFor(modelItem => report.quantity)</td>
                <td>@Html.DisplayFor(modelItem => report.income) บาท</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    // Load the Visualization API and the corechart package.
    google.charts.load('current', { 'packages': ['corechart'] });

    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(drawChart);

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawChart() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'ชื่อคอร์ส');
        data.addColumn('number', 'ยอด');
        data.addRows([
            @foreach (var report in reports.report)
            {
                <text>['@(report.name) (@(report.sku))', @(report.quantity)],</text>
            }
        ]);

        // Set chart options
        var options = {
            title: 'กราฟแสดงยอดขายของคอร์ส',
            slices: {
                @{
                    int theIndex = 0;
                }
                @foreach (var report in reports.report)
                {
                    <text>@theIndex: { color: '@(report.color)' },</text>
                    theIndex++;
                }
            },
            is3D: true,
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
        chart.draw(data, options);
    }
</script>
<style>
.color4chart {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    display: inline-flex;
}
</style>
}
